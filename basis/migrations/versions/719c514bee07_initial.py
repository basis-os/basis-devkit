"""Initial

Revision ID: 719c514bee07
Revises:
Create Date: 2021-08-25 18:32:53.604370

"""
import basis
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "719c514bee07"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "_basis_block_metadata",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.String(length=128), nullable=False),
        sa.Column("inferred_schema_key", sa.String(length=128), nullable=True),
        sa.Column("nominal_schema_key", sa.String(length=128), nullable=True),
        sa.Column("realized_schema_key", sa.String(length=128), nullable=False),
        sa.Column("record_count", sa.Integer(), nullable=True),
        sa.Column("created_by_node_key", sa.String(length=128), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "_basis_execution_log",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("node_key", sa.String(length=128), nullable=False),
        sa.Column("node_cfg", sa.JSON(), nullable=True),
        sa.Column("runtime_url", sa.String(length=128), nullable=True),
        sa.Column("queued_at", sa.DateTime(), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("timed_out", sa.Boolean(), nullable=True),
        sa.Column("error", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "_basis_generated_schema",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("key", sa.String(length=128), nullable=False),
        sa.Column("definition", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_table(
        "_basis_stream_state",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("node_key", sa.String(length=128), nullable=True),
        sa.Column("stream_name", sa.String(length=128), nullable=False),
        sa.Column(
            "direction",
            sa.Enum("INPUT", "OUTPUT", name="direction", native_enum=False),
            nullable=False,
        ),
        sa.Column("first_processed_block_id", sa.String(length=128), nullable=True),
        sa.Column("latest_processed_block_id", sa.String(length=128), nullable=True),
        sa.Column("latest_processed_at", sa.DateTime(), nullable=True),
        sa.Column("blocks_processed", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "_basis_stored_block_metadata",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.String(length=128), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=False),
        sa.Column("block_id", sa.String(length=128), nullable=False),
        sa.Column("storage_url", sa.String(length=128), nullable=False),
        sa.Column(
            "data_format",
            basis.core.persistence.base.DataFormatType(length=128),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["block_id"],
            ["_basis_block_metadata.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "_basis_alias",
        sa.Column("env_id", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("storage_url", sa.String(length=128), nullable=True),
        sa.Column("block_id", sa.String(length=128), nullable=False),
        sa.Column("stored_block_id", sa.String(length=128), nullable=False),
        sa.ForeignKeyConstraint(
            ["block_id"],
            ["_basis_block_metadata.id"],
        ),
        sa.ForeignKeyConstraint(
            ["stored_block_id"],
            ["_basis_stored_block_metadata.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("env_id", "name", "storage_url"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("_basis_alias")
    op.drop_table("_basis_stored_block_metadata")
    op.drop_table("_basis_stream_state")
    op.drop_table("_basis_generated_schema")
    op.drop_table("_basis_execution_log")
    op.drop_table("_basis_block_metadata")
    # ### end Alembic commands ###
